package main

import (
	"encoding/json"
	"fmt"
	"testing"

	"github.com/niluan304/leetcode/tests"
)

func Test_rootCount(t *testing.T) {
	targetCaseNum := 0 // -1

	fs := []func(edges [][]int, guesses [][]int, k int) int{
		// bruteForce,
		rootCount,
		rootCount2,
		// leetcode,
		// endlessCheng,
	}

	for _, f := range fs {
		err := tests.RunFunc(t, f, samples, targetCaseNum)
		if err != nil {
			t.Error(err)
		}
	}
}

var samples = `
[[0,1],[1,2],[1,3],[4,2]]
[[1,3],[0,1],[1,0],[2,4]]
3
3

[[0,1],[1,2],[2,3],[3,4]]
[[1,0],[3,4],[2,1],[3,2]]
1
5

[[0,1],[2,0],[0,3],[4,2],[3,5],[6,0],[1,7],[2,8],[2,9],[4,10],[9,11],[3,12],[13,8],[14,9],[15,9],[10,16]]
[[8,2],[12,3],[0,1],[16,10]]
2
4

[[1,0],[2,1],[2,3],[4,0],[5,2],[6,1],[0,7],[1,8],[9,6],[10,4],[11,10],[12,8],[8,13],[14,4],[15,9],[9,16],[3,17],[4,18],[6,19],[20,13],[21,20],[19,22],[23,3],[24,0],[25,14],[17,26],[27,3],[3,28],[29,3],[4,30],[31,9],[0,32],[33,12],[34,14],[27,35],[35,36],[37,33],[38,18],[6,39]]
[[13,8],[4,18],[37,33],[4,30],[1,8],[3,17],[25,14],[0,1],[27,35],[21,20],[6,1],[26,17],[1,2],[8,13],[22,19],[30,4],[4,0],[2,5],[14,4],[9,6],[19,22],[16,9],[5,2],[29,3],[34,14],[8,1],[11,10],[15,9],[10,4],[35,27],[3,27],[33,12],[14,34],[32,0],[14,25],[39,6],[7,0],[4,10],[0,32],[23,3],[20,21],[24,0],[0,7],[1,0],[3,28],[6,9],[8,12],[18,4],[1,6],[2,1],[2,3],[3,29],[9,16],[17,26],[35,36],[13,20],[10,11],[18,38],[3,23],[0,24],[33,37],[12,33],[3,2],[20,13],[17,3]]
29
40

`

func init() {
	n := int(1e4)
	tree := make([][]int, n-1) // 增加菊花图测试用例
	for i := range tree {
		tree[i] = []int{0, i + 1}
	}
	data, _ := json.Marshal(tree)
	samples += fmt.Sprintf(`
%s
%s
%d
%d

`, data, "[[1,0]]", 0, n)
}
